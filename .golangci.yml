run:
  timeout: 5m
  modules-download-mode: readonly
  go: "1.24"

linters-settings:
  gofumpt:
    extra-rules: true
  
  goimports:
    local-prefixes: github.com/Tattsum/quiz
  
  govet:
    shadow: true
  
  misspell:
    locale: US

linters:
  enable:
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    - gofumpt
    - goimports
    - misspell
    - revive
    - gosec
    - gocritic
    - bodyclose
    - contextcheck
    - durationcheck
    - errorlint
    - exhaustive
    - copyloopvar
    - forcetypeassert
    - goconst
    - goheader
    - goprintffuncname
    - makezero
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - usetesting
    - thelper
    - unconvert
    - unparam
    - wastedassign
    - whitespace

issues:
  exclude-use-default: false
  exclude-rules:
    - path: _test\.go
      linters:
        - gosec
        - errcheck
        - gocyclo
    - path: integration_test\.go
      linters:
        - errcheck
        - gocyclo
    - path: performance_test\.go
      linters:
        - errcheck
        - gocyclo
    - path: main\.go
      linters:
        - goconst
    - text: "cyclomatic complexity .* is high"
      linters:
        - gocyclo
    - text: "should use for range instead of for"
      linters:
        - gosimple
    - text: "cyclomatic complexity .* of func .*(SubmitAnswer|WebSocketResults|TestSystemLoadUnder70Users|TestConcurrentAnswerSubmissions|TestIntegrationQuizFlow)"
      linters:
        - gocyclo
    - path: _test\.go
      linters:
        - bodyclose
        - forcetypeassert
        - noctx
        - usetesting
    - path: integration_test\.go
      linters:
        - forcetypeassert
        - noctx
    - path: performance_test\.go
      linters:
        - forcetypeassert
        - noctx
    - text: "exported.*should have comment"
      linters:
        - revive
    - text: "comparing with == will fail on wrapped errors"
      linters:
        - errorlint
    - text: "switch on an error will fail on wrapped errors"
      linters:
        - errorlint
    - text: "type assertion on error will fail on wrapped errors"
      linters:
        - errorlint
    - text: "result.*is always nil"
      linters:
        - unparam
    - text: "exitAfterDefer.*will not run"
      linters:
        - gocritic
    - text: "File is not properly formatted"
      linters:
        - goimports
    - text: "ifElseChain.*rewrite if-else"
      linters:
        - gocritic
    - text: "type assertion must be checked"
      linters:
        - forcetypeassert
    - text: "right hand must be only type assertion"
      linters:
        - forcetypeassert
  
  max-issues-per-linter: 0
  max-same-issues: 0
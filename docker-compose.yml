version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: quiz_postgres
    environment:
      POSTGRES_DB: quiz_db
      POSTGRES_USER: quiz_user
      POSTGRES_PASSWORD: quiz_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - quiz_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quiz_user -d quiz_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session management and caching
  redis:
    image: redis:8-alpine
    container_name: quiz_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quiz_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Go API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quiz_api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=quiz_user
      - DB_PASSWORD=quiz_password
      - DB_NAME=quiz_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=8080
      - GIN_MODE=release
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quiz_network
    volumes:
      - ./uploads:/app/uploads

  # Nuxt 3 Admin Dashboard
  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile
    container_name: quiz_admin
    environment:
      - NUXT_API_BASE_URL=http://api:8080
      - NUXT_WS_URL=ws://api:8080/ws
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - quiz_network

  # Next.js Participant App
  participant-app:
    build:
      context: ./participant-app
      dockerfile: Dockerfile
    container_name: quiz_participant
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8080
      - NEXT_PUBLIC_WS_URL=ws://localhost:8080/ws
    ports:
      - "3001:3000"
    depends_on:
      - api
    networks:
      - quiz_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: quiz_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - api
      - admin-dashboard
      - participant-app
    networks:
      - quiz_network

networks:
  quiz_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: